{"version":3,"sources":["nested-option.ts"],"names":[],"mappings":"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","file":"nested-option.js","sourceRoot":"","sourcesContent":["/*!\n * devextreme-angular\n * Version: 17.2.4\n * Build date: Wed Dec 13 2017\n *\n * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\nimport { QueryList, ElementRef } from '@angular/core';\r\n\r\nimport { DX_TEMPLATE_WRAPPER_CLASS } from './template';\r\nimport { addClass, hasClass, getElement } from './utils';\r\n\r\nimport * as events from 'devextreme/events';\r\n\r\nconst VISIBILITY_CHANGE_SELECTOR = 'dx-visibility-change-handler';\r\n\r\nexport interface INestedOptionContainer {\r\n    instance: any;\r\n    isLinked: boolean;\r\n}\r\n\r\nexport interface IOptionPathGetter { (): string; }\r\n\r\nexport abstract class BaseNestedOption implements INestedOptionContainer, ICollectionNestedOptionContainer {\r\n    protected _host: INestedOptionContainer;\r\n    protected _hostOptionPath: IOptionPathGetter;\r\n    private _collectionContainerImpl: ICollectionNestedOptionContainer;\r\n    protected _initialOptions = {};\r\n\r\n    protected abstract get _optionPath(): string;\r\n    protected abstract _fullOptionPath(): string;\r\n\r\n    constructor() {\r\n        this._collectionContainerImpl = new CollectionNestedOptionContainerImpl(this._setOption.bind(this), this._filterItems.bind(this));\r\n    }\r\n\r\n    protected _getOption(name: string): any {\r\n        if (this.isLinked) {\r\n            return this.instance.option(this._fullOptionPath() + name);\r\n        } else {\r\n            return this._initialOptions[name];\r\n        }\r\n    }\r\n\r\n    protected _setOption(name: string, value: any) {\r\n        if (this.isLinked) {\r\n            this.instance.option(this._fullOptionPath() + name, value);\r\n        } else {\r\n            this._initialOptions[name] = value;\r\n        }\r\n    }\r\n\r\n    setHost(host: INestedOptionContainer, optionPath: IOptionPathGetter) {\r\n        this._host = host;\r\n        this._hostOptionPath = optionPath;\r\n    }\r\n\r\n    setChildren<T extends ICollectionNestedOption>(propertyName: string, items: QueryList<T>) {\r\n        return this._collectionContainerImpl.setChildren(propertyName, items);\r\n    }\r\n\r\n    _filterItems(items: QueryList<BaseNestedOption>) {\r\n        return items.filter((item) => { return item !== this; });\r\n    }\r\n\r\n    get instance() {\r\n        return this._host && this._host.instance;\r\n    }\r\n\r\n    get isLinked() {\r\n        return !!this.instance && this._host.isLinked;\r\n    }\r\n}\r\n\r\nexport interface ICollectionNestedOptionContainer {\r\n    setChildren<T extends ICollectionNestedOption>(propertyName: string, items: QueryList<T>);\r\n}\r\n\r\nexport class CollectionNestedOptionContainerImpl implements ICollectionNestedOptionContainer {\r\n    private _activatedQueries = {};\r\n\r\n    constructor(private _setOption: Function, private _filterItems?: Function) {}\r\n\r\n    setChildren<T extends ICollectionNestedOption>(propertyName: string, items: QueryList<T>) {\r\n        if (this._filterItems) {\r\n            items = this._filterItems(items);\r\n        }\r\n        if (items.length) {\r\n            this._activatedQueries[propertyName] = true;\r\n        }\r\n        if (this._activatedQueries[propertyName]) {\r\n            let widgetItems = items.map((item, index) => {\r\n                item._index = index;\r\n                return item._value;\r\n            });\r\n            this._setOption(propertyName, widgetItems);\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class NestedOption extends BaseNestedOption {\r\n    setHost(host: INestedOptionContainer, optionPath: IOptionPathGetter) {\r\n        super.setHost(host, optionPath);\r\n\r\n        this._host[this._optionPath] = this._initialOptions;\r\n    }\r\n\r\n    protected _fullOptionPath() {\r\n        return this._hostOptionPath() + this._optionPath + '.';\r\n    }\r\n}\r\n\r\nexport interface ICollectionNestedOption {\r\n    _index: number;\r\n    _value: Object;\r\n}\r\n\r\nexport abstract class CollectionNestedOption extends BaseNestedOption implements ICollectionNestedOption {\r\n    _index: number;\r\n\r\n    protected _fullOptionPath() {\r\n        return this._hostOptionPath() + this._optionPath + '[' + this._index + ']' + '.';\r\n    }\r\n\r\n    get _value() {\r\n        return this._initialOptions;\r\n    }\r\n\r\n    get isLinked() {\r\n        return this._index !== undefined && !!this.instance;\r\n    }\r\n}\r\n\r\nexport interface IOptionWithTemplate extends BaseNestedOption {\r\n    template: any;\r\n}\r\n\r\nlet triggerShownEvent = function(element) {\r\n    let changeHandlers = [];\r\n\r\n    if (hasClass(element, VISIBILITY_CHANGE_SELECTOR)) {\r\n        changeHandlers.push(element);\r\n    }\r\n\r\n    changeHandlers.push.apply(changeHandlers, element.querySelectorAll('.' + VISIBILITY_CHANGE_SELECTOR));\r\n\r\n    for (let i = 0; i < changeHandlers.length; i++) {\r\n        events.triggerHandler(changeHandlers[i], 'dxshown');\r\n    }\r\n};\r\n\r\nexport function extractTemplate(option: IOptionWithTemplate, element: ElementRef) {\r\n    if (!option.template === undefined || !element.nativeElement.hasChildNodes()) {\r\n        return;\r\n    }\r\n\r\n    let childNodes = [].slice.call(element.nativeElement.childNodes);\r\n    let userContent = childNodes.filter((n) => {\r\n        if (n.tagName) {\r\n            let tagNamePrefix = n.tagName.toLowerCase().substr(0, 3);\r\n            return !(tagNamePrefix === 'dxi' || tagNamePrefix === 'dxo');\r\n        } else {\r\n            return n.nodeName !== '#comment' && n.textContent.replace(/\\s/g, '').length;\r\n        }\r\n    });\r\n    if (!userContent.length) {\r\n        return;\r\n    }\r\n\r\n    option.template = {\r\n        render: (renderData) => {\r\n            let result = element.nativeElement;\r\n\r\n            addClass(result, DX_TEMPLATE_WRAPPER_CLASS);\r\n\r\n            if (renderData.container) {\r\n                let container = getElement(renderData.container);\r\n                let resultInContainer = container.contains(element.nativeElement);\r\n\r\n                container.appendChild(element.nativeElement);\r\n\r\n                if (!resultInContainer) {\r\n                    let resultInBody = document.body.contains(container);\r\n\r\n                    if (resultInBody) {\r\n                        triggerShownEvent(result);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n    };\r\n}\r\n\r\nexport class NestedOptionHost {\r\n    private _host: INestedOptionContainer;\r\n    private _optionPath: IOptionPathGetter;\r\n\r\n    setHost(host: INestedOptionContainer, optionPath?: IOptionPathGetter) {\r\n        this._host = host;\r\n        this._optionPath = optionPath || (() => '');\r\n    }\r\n\r\n    setNestedOption(nestedOption: BaseNestedOption) {\r\n        nestedOption.setHost(this._host, this._optionPath);\r\n    }\r\n}\r\n"]}