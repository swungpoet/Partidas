{"version":3,"sources":["pivot-grid.ts"],"names":[],"mappings":"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","file":"pivot-grid.js","sourceRoot":"","sourcesContent":["/*!\n * devextreme-angular\n * Version: 17.2.4\n * Build date: Wed Dec 13 2017\n *\n * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxPivotGrid from 'devextreme/ui/pivot_grid';\r\n\r\n\r\nimport { DxComponent } from '../core/component';\r\nimport { DxTemplateHost } from '../core/template-host';\r\nimport { DxTemplateModule } from '../core/template';\r\nimport { NestedOptionHost } from '../core/nested-option';\r\nimport { WatcherHelper } from '../core/watcher-helper';\r\nimport { IterableDifferHelper } from '../core/iterable-differ-helper';\r\n\r\nimport { DxoDataSourceModule } from './nested/data-source';\r\nimport { DxiFieldModule } from './nested/field-dxi';\r\nimport { DxoFormatModule } from './nested/format';\r\nimport { DxoHeaderFilterModule } from './nested/header-filter';\r\nimport { DxoStoreModule } from './nested/store';\r\nimport { DxoExportModule } from './nested/export';\r\nimport { DxoFieldChooserModule } from './nested/field-chooser';\r\nimport { DxoTextsModule } from './nested/texts';\r\nimport { DxoFieldPanelModule } from './nested/field-panel';\r\nimport { DxoLoadPanelModule } from './nested/load-panel';\r\nimport { DxoScrollingModule } from './nested/scrolling';\r\nimport { DxoStateStoringModule } from './nested/state-storing';\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The PivotGrid is a widget that allows you to display and analyze multi-dimensional data from a local storage or an OLAP cube.\r\n */\r\n\r\nexport class DxPivotGridComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxPivotGrid;\r\n\r\n\r\n    /**\r\n     * Allows an end-user to expand/collapse all header items within a header level.\r\n     */\r\n    \r\n    get allowExpandAll(): boolean {\r\n        return this._getOption('allowExpandAll');\r\n    }\r\n    set allowExpandAll(value: boolean) {\r\n        this._setOption('allowExpandAll', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows a user to filter fields by selecting or deselecting values in the popup menu.\r\n     */\r\n    \r\n    get allowFiltering(): boolean {\r\n        return this._getOption('allowFiltering');\r\n    }\r\n    set allowFiltering(value: boolean) {\r\n        this._setOption('allowFiltering', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows an end-user to change sorting options.\r\n     */\r\n    \r\n    get allowSorting(): boolean {\r\n        return this._getOption('allowSorting');\r\n    }\r\n    set allowSorting(value: boolean) {\r\n        this._setOption('allowSorting', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows an end-user to sort columns by summary values.\r\n     */\r\n    \r\n    get allowSortingBySummary(): boolean {\r\n        return this._getOption('allowSortingBySummary');\r\n    }\r\n    set allowSortingBySummary(value: boolean) {\r\n        this._setOption('allowSortingBySummary', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the area to which data field headers must belong.\r\n     */\r\n    \r\n    get dataFieldArea(): string {\r\n        return this._getOption('dataFieldArea');\r\n    }\r\n    set dataFieldArea(value: string) {\r\n        this._setOption('dataFieldArea', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a data source for the pivot grid.\r\n     */\r\n    \r\n    get dataSource(): DevExpress.data.PivotGridDataSource|\n        DevExpress.data.PivotGridDataSourceOptions|\n        Array<any> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.PivotGridDataSource|\n        DevExpress.data.PivotGridDataSourceOptions|\n        Array<any>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    \r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    \r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures client-side exporting.\r\n     */\r\n    \r\n    get export(): any {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: any) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The Field Chooser configuration options.\r\n     */\r\n    \r\n    get fieldChooser(): any {\r\n        return this._getOption('fieldChooser');\r\n    }\r\n    set fieldChooser(value: any) {\r\n        this._setOption('fieldChooser', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the field panel.\r\n     */\r\n    \r\n    get fieldPanel(): any {\r\n        return this._getOption('fieldPanel');\r\n    }\r\n    set fieldPanel(value: any) {\r\n        this._setOption('fieldPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the header filter feature.\r\n     */\r\n    \r\n    get headerFilter(): any {\r\n        return this._getOption('headerFilter');\r\n    }\r\n    set headerFilter(value: any) {\r\n        this._setOption('headerFilter', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    \r\n    get height(): number|\n        Function|\n        string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number|\n        Function|\n        string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not to hide rows and columns with no data.\r\n     */\r\n    \r\n    get hideEmptySummaryCells(): boolean {\r\n        return this._getOption('hideEmptySummaryCells');\r\n    }\r\n    set hideEmptySummaryCells(value: boolean) {\r\n        this._setOption('hideEmptySummaryCells', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    \r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies options configuring the load panel.\r\n     */\r\n    \r\n    get loadPanel(): any {\r\n        return this._getOption('loadPanel');\r\n    }\r\n    set loadPanel(value: any) {\r\n        this._setOption('loadPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the layout of items in the row header.\r\n     */\r\n    \r\n    get rowHeaderLayout(): string {\r\n        return this._getOption('rowHeaderLayout');\r\n    }\r\n    set rowHeaderLayout(value: string) {\r\n        this._setOption('rowHeaderLayout', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    \r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A configuration object specifying scrolling options.\r\n     */\r\n    \r\n    get scrolling(): any {\r\n        return this._getOption('scrolling');\r\n    }\r\n    set scrolling(value: any) {\r\n        this._setOption('scrolling', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the outer borders of the grid are visible or not.\r\n     */\r\n    \r\n    get showBorders(): boolean {\r\n        return this._getOption('showBorders');\r\n    }\r\n    set showBorders(value: boolean) {\r\n        this._setOption('showBorders', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Grand Total column.\r\n     */\r\n    \r\n    get showColumnGrandTotals(): boolean {\r\n        return this._getOption('showColumnGrandTotals');\r\n    }\r\n    set showColumnGrandTotals(value: boolean) {\r\n        this._setOption('showColumnGrandTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Total columns.\r\n     */\r\n    \r\n    get showColumnTotals(): boolean {\r\n        return this._getOption('showColumnTotals');\r\n    }\r\n    set showColumnTotals(value: boolean) {\r\n        this._setOption('showColumnTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Grand Total row.\r\n     */\r\n    \r\n    get showRowGrandTotals(): boolean {\r\n        return this._getOption('showRowGrandTotals');\r\n    }\r\n    set showRowGrandTotals(value: boolean) {\r\n        this._setOption('showRowGrandTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to display the Total rows. Applies only if rowHeaderLayout is \"standard\".\r\n     */\r\n    \r\n    get showRowTotals(): boolean {\r\n        return this._getOption('showRowTotals');\r\n    }\r\n    set showRowTotals(value: boolean) {\r\n        this._setOption('showRowTotals', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies where to show the total rows or columns. Applies only if rowHeaderLayout is \"standard\".\r\n     */\r\n    \r\n    get showTotalsPrior(): string {\r\n        return this._getOption('showTotalsPrior');\r\n    }\r\n    set showTotalsPrior(value: string) {\r\n        this._setOption('showTotalsPrior', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A configuration object specifying options related to state storing.\r\n     */\r\n    \r\n    get stateStoring(): any {\r\n        return this._getOption('stateStoring');\r\n    }\r\n    set stateStoring(value: any) {\r\n        this._setOption('stateStoring', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n     */\r\n    \r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Strings that can be changed or localized in the PivotGrid widget.\r\n     */\r\n    \r\n    get texts(): any {\r\n        return this._getOption('texts');\r\n    }\r\n    set texts(value: any) {\r\n        this._setOption('texts', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * undefined\r\n     */\r\n    \r\n    get useNativeScrolling(): boolean|\n        string {\r\n        return this._getOption('useNativeScrolling');\r\n    }\r\n    set useNativeScrolling(value: boolean|\n        string) {\r\n        this._setOption('useNativeScrolling', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    \r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    \r\n    get width(): number|\n        Function|\n        string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number|\n        Function|\n        string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether long text in header items should be wrapped.\r\n     */\r\n    \r\n    get wordWrapEnabled(): boolean {\r\n        return this._getOption('wordWrapEnabled');\r\n    }\r\n    set wordWrapEnabled(value: boolean) {\r\n        this._setOption('wordWrapEnabled', value);\r\n    }\r\n\r\n    /**\r\n     * A handler for the cellClick event.\r\n     */\r\n     onCellClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the cellPrepared event.\r\n     */\r\n     onCellPrepared: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the contentReady event. Executed when the widget's content is ready. This handler may be executed multiple times during the widget's lifetime depending on the number of times its content changes.\r\n     */\r\n     onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the contextMenuPreparing event.\r\n     */\r\n     onContextMenuPreparing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the disposing event. Executed when the widget is removed from the DOM using the remove(), empty(), or html() jQuery methods only.\r\n     */\r\n     onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the exported event.\r\n     */\r\n     onExported: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the exporting event.\r\n     */\r\n     onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the fileSaving event.\r\n     */\r\n     onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the initialized event. Executed only once, after the widget is initialized.\r\n     */\r\n     onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the optionChanged event. Executed after an option of the widget is changed.\r\n     */\r\n     onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     allowExpandAllChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     allowFilteringChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     allowSortingChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     allowSortingBySummaryChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     dataFieldAreaChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     dataSourceChange: EventEmitter<DevExpress.data.PivotGridDataSource|\n        DevExpress.data.PivotGridDataSourceOptions|\n        Array<any>>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     exportChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     fieldChooserChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     fieldPanelChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     headerFilterChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     heightChange: EventEmitter<number|\n        Function|\n        string>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     hideEmptySummaryCellsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     loadPanelChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     rowHeaderLayoutChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     scrollingChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     showBordersChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     showColumnGrandTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     showColumnTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     showRowGrandTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     showRowTotalsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     showTotalsPriorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     stateStoringChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     textsChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     useNativeScrollingChange: EventEmitter<boolean|\n        string>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     widthChange: EventEmitter<number|\n        Function|\n        string>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     wordWrapEnabledChange: EventEmitter<boolean>;\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper, optionHost: NestedOptionHost) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'cellClick', emit: 'onCellClick' },\r\n            { subscribe: 'cellPrepared', emit: 'onCellPrepared' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'contextMenuPreparing', emit: 'onContextMenuPreparing' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { emit: 'allowExpandAllChange' },\r\n            { emit: 'allowFilteringChange' },\r\n            { emit: 'allowSortingChange' },\r\n            { emit: 'allowSortingBySummaryChange' },\r\n            { emit: 'dataFieldAreaChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'fieldChooserChange' },\r\n            { emit: 'fieldPanelChange' },\r\n            { emit: 'headerFilterChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hideEmptySummaryCellsChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'loadPanelChange' },\r\n            { emit: 'rowHeaderLayoutChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scrollingChange' },\r\n            { emit: 'showBordersChange' },\r\n            { emit: 'showColumnGrandTotalsChange' },\r\n            { emit: 'showColumnTotalsChange' },\r\n            { emit: 'showRowGrandTotalsChange' },\r\n            { emit: 'showRowTotalsChange' },\r\n            { emit: 'showTotalsPriorChange' },\r\n            { emit: 'stateStoringChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textsChange' },\r\n            { emit: 'useNativeScrollingChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'wordWrapEnabledChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n        return new DxPivotGrid(element, options);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this._idh.setup('dataSource', changes);\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('dataSource');\r\n        this._watcherHelper.checkWatchers();\r\n    }\r\n\r\n    _updateOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._updateOption(name, value);\r\n        }\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'dx-pivot-grid',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: DxTemplateHost, },\n{type: WatcherHelper, },\n{type: IterableDifferHelper, },\n{type: NestedOptionHost, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'allowExpandAll': [{ type: Input },],\n'allowFiltering': [{ type: Input },],\n'allowSorting': [{ type: Input },],\n'allowSortingBySummary': [{ type: Input },],\n'dataFieldArea': [{ type: Input },],\n'dataSource': [{ type: Input },],\n'disabled': [{ type: Input },],\n'elementAttr': [{ type: Input },],\n'export': [{ type: Input },],\n'fieldChooser': [{ type: Input },],\n'fieldPanel': [{ type: Input },],\n'headerFilter': [{ type: Input },],\n'height': [{ type: Input },],\n'hideEmptySummaryCells': [{ type: Input },],\n'hint': [{ type: Input },],\n'loadPanel': [{ type: Input },],\n'rowHeaderLayout': [{ type: Input },],\n'rtlEnabled': [{ type: Input },],\n'scrolling': [{ type: Input },],\n'showBorders': [{ type: Input },],\n'showColumnGrandTotals': [{ type: Input },],\n'showColumnTotals': [{ type: Input },],\n'showRowGrandTotals': [{ type: Input },],\n'showRowTotals': [{ type: Input },],\n'showTotalsPrior': [{ type: Input },],\n'stateStoring': [{ type: Input },],\n'tabIndex': [{ type: Input },],\n'texts': [{ type: Input },],\n'useNativeScrolling': [{ type: Input },],\n'visible': [{ type: Input },],\n'width': [{ type: Input },],\n'wordWrapEnabled': [{ type: Input },],\n'onCellClick': [{ type: Output },],\n'onCellPrepared': [{ type: Output },],\n'onContentReady': [{ type: Output },],\n'onContextMenuPreparing': [{ type: Output },],\n'onDisposing': [{ type: Output },],\n'onExported': [{ type: Output },],\n'onExporting': [{ type: Output },],\n'onFileSaving': [{ type: Output },],\n'onInitialized': [{ type: Output },],\n'onOptionChanged': [{ type: Output },],\n'allowExpandAllChange': [{ type: Output },],\n'allowFilteringChange': [{ type: Output },],\n'allowSortingChange': [{ type: Output },],\n'allowSortingBySummaryChange': [{ type: Output },],\n'dataFieldAreaChange': [{ type: Output },],\n'dataSourceChange': [{ type: Output },],\n'disabledChange': [{ type: Output },],\n'elementAttrChange': [{ type: Output },],\n'exportChange': [{ type: Output },],\n'fieldChooserChange': [{ type: Output },],\n'fieldPanelChange': [{ type: Output },],\n'headerFilterChange': [{ type: Output },],\n'heightChange': [{ type: Output },],\n'hideEmptySummaryCellsChange': [{ type: Output },],\n'hintChange': [{ type: Output },],\n'loadPanelChange': [{ type: Output },],\n'rowHeaderLayoutChange': [{ type: Output },],\n'rtlEnabledChange': [{ type: Output },],\n'scrollingChange': [{ type: Output },],\n'showBordersChange': [{ type: Output },],\n'showColumnGrandTotalsChange': [{ type: Output },],\n'showColumnTotalsChange': [{ type: Output },],\n'showRowGrandTotalsChange': [{ type: Output },],\n'showRowTotalsChange': [{ type: Output },],\n'showTotalsPriorChange': [{ type: Output },],\n'stateStoringChange': [{ type: Output },],\n'tabIndexChange': [{ type: Output },],\n'textsChange': [{ type: Output },],\n'useNativeScrollingChange': [{ type: Output },],\n'visibleChange': [{ type: Output },],\n'widthChange': [{ type: Output },],\n'wordWrapEnabledChange': [{ type: Output },],\n};\n}\r\n\r\n\r\nexport class DxPivotGridModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [\r\n    DxoDataSourceModule,\r\n    DxiFieldModule,\r\n    DxoFormatModule,\r\n    DxoHeaderFilterModule,\r\n    DxoStoreModule,\r\n    DxoExportModule,\r\n    DxoFieldChooserModule,\r\n    DxoTextsModule,\r\n    DxoFieldPanelModule,\r\n    DxoLoadPanelModule,\r\n    DxoScrollingModule,\r\n    DxoStateStoringModule,\r\n    DxTemplateModule\r\n  ],\r\n  declarations: [\r\n    DxPivotGridComponent\r\n  ],\r\n  exports: [\r\n    DxPivotGridComponent,\r\n    DxoDataSourceModule,\r\n    DxiFieldModule,\r\n    DxoFormatModule,\r\n    DxoHeaderFilterModule,\r\n    DxoStoreModule,\r\n    DxoExportModule,\r\n    DxoFieldChooserModule,\r\n    DxoTextsModule,\r\n    DxoFieldPanelModule,\r\n    DxoLoadPanelModule,\r\n    DxoScrollingModule,\r\n    DxoStateStoringModule,\r\n    DxTemplateModule\r\n  ],\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}