{"version":3,"sources":["load-panel.ts"],"names":[],"mappings":"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","file":"load-panel.js","sourceRoot":"","sourcesContent":["/*!\n * devextreme-angular\n * Version: 17.2.4\n * Build date: Wed Dec 13 2017\n *\n * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    Host,\r\n    SkipSelf,\r\n    Input\r\n} from '@angular/core';\r\n\r\n\r\n\r\nimport { NestedOptionHost } from '../../core/nested-option';\r\nimport { NestedOption } from '../../core/nested-option';\r\n\r\n\r\n\r\nexport class DxoLoadPanelComponent extends NestedOption {\r\n    \r\n    get enabled(): boolean|\n        string {\r\n        return this._getOption('enabled');\r\n    }\r\n    set enabled(value: boolean|\n        string) {\r\n        this._setOption('enabled', value);\r\n    }\r\n\r\n    \r\n    get height(): number {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n    \r\n    get indicatorSrc(): string {\r\n        return this._getOption('indicatorSrc');\r\n    }\r\n    set indicatorSrc(value: string) {\r\n        this._setOption('indicatorSrc', value);\r\n    }\r\n\r\n    \r\n    get showIndicator(): boolean {\r\n        return this._getOption('showIndicator');\r\n    }\r\n    set showIndicator(value: boolean) {\r\n        this._setOption('showIndicator', value);\r\n    }\r\n\r\n    \r\n    get showPane(): boolean {\r\n        return this._getOption('showPane');\r\n    }\r\n    set showPane(value: boolean) {\r\n        this._setOption('showPane', value);\r\n    }\r\n\r\n    \r\n    get text(): string {\r\n        return this._getOption('text');\r\n    }\r\n    set text(value: string) {\r\n        this._setOption('text', value);\r\n    }\r\n\r\n    \r\n    get width(): number {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n    protected get _optionPath() {\r\n        return 'loadPanel';\r\n    }\r\n\r\n\r\n    constructor(  parentOptionHost: NestedOptionHost,\r\n             optionHost: NestedOptionHost) {\r\n        super();\r\n        parentOptionHost.setNestedOption(this);\r\n        optionHost.setHost(this, this._fullOptionPath.bind(this));\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'dxo-load-panel',\r\n    template: '',\r\n    styles: [''],\r\n    providers: [NestedOptionHost]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }, ]},\n{type: NestedOptionHost, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'enabled': [{ type: Input },],\n'height': [{ type: Input },],\n'indicatorSrc': [{ type: Input },],\n'showIndicator': [{ type: Input },],\n'showPane': [{ type: Input },],\n'text': [{ type: Input },],\n'width': [{ type: Input },],\n};\n}\r\n\r\n\r\nexport class DxoLoadPanelModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  declarations: [\r\n    DxoLoadPanelComponent\r\n  ],\r\n  exports: [\r\n    DxoLoadPanelComponent\r\n  ],\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}