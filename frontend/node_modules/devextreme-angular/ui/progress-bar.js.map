{"version":3,"sources":["progress-bar.ts"],"names":[],"mappings":"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","file":"progress-bar.js","sourceRoot":"","sourcesContent":["/*!\n * devextreme-angular\n * Version: 17.2.4\n * Build date: Wed Dec 13 2017\n *\n * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    AfterContentInit,\r\n    ContentChild,\r\n    forwardRef,\r\n    HostListener\r\n} from '@angular/core';\r\n\r\n\r\n\r\nimport DxProgressBar from 'devextreme/ui/progress_bar';\r\n\r\nimport { DxValidatorComponent } from './validator';\r\n\r\nimport {\r\n    ControlValueAccessor,\r\n    NG_VALUE_ACCESSOR\r\n} from '@angular/forms';\r\n\r\nimport { DxComponent } from '../core/component';\r\nimport { DxTemplateHost } from '../core/template-host';\r\nimport { DxTemplateModule } from '../core/template';\r\nimport { NestedOptionHost } from '../core/nested-option';\r\nimport { WatcherHelper } from '../core/watcher-helper';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => DxProgressBarComponent),\r\n    multi: true\r\n};\r\n\r\n/**\r\n * The ProgressBar is a widget that shows current progress.\r\n */\r\n\r\nexport class DxProgressBarComponent extends DxComponent implements OnDestroy, AfterContentInit, ControlValueAccessor {\r\n    instance: DxProgressBar;\r\n\r\n    \r\n    validator: DxValidatorComponent;\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    \r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    \r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    \r\n    get height(): number|\n        Function|\n        string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number|\n        Function|\n        string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    \r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget changes its state when a user pauses on it.\r\n     */\r\n    \r\n    get hoverStateEnabled(): boolean {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value: boolean) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the editor's value is valid.\r\n     */\r\n    \r\n    get isValid(): boolean {\r\n        return this._getOption('isValid');\r\n    }\r\n    set isValid(value: boolean) {\r\n        this._setOption('isValid', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The maximum value the widget can accept.\r\n     */\r\n    \r\n    get max(): number {\r\n        return this._getOption('max');\r\n    }\r\n    set max(value: number) {\r\n        this._setOption('max', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The minimum value the widget can accept.\r\n     */\r\n    \r\n    get min(): number {\r\n        return this._getOption('min');\r\n    }\r\n    set min(value: number) {\r\n        this._setOption('min', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A Boolean value specifying whether or not the widget is read-only.\r\n     */\r\n    \r\n    get readOnly(): boolean {\r\n        return this._getOption('readOnly');\r\n    }\r\n    set readOnly(value: boolean) {\r\n        this._setOption('readOnly', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    \r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not the widget displays a progress status.\r\n     */\r\n    \r\n    get showStatus(): boolean {\r\n        return this._getOption('showStatus');\r\n    }\r\n    set showStatus(value: boolean) {\r\n        this._setOption('showStatus', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a format for the progress status.\r\n     */\r\n    \r\n    get statusFormat(): Function|\n        string {\r\n        return this._getOption('statusFormat');\r\n    }\r\n    set statusFormat(value: Function|\n        string) {\r\n        this._setOption('statusFormat', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies information on the validation error when using a custom validation engine. Should be changed at runtime along with the isValid option.\r\n     */\r\n    \r\n    get validationError(): any {\r\n        return this._getOption('validationError');\r\n    }\r\n    set validationError(value: any) {\r\n        this._setOption('validationError', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies how the message about the validation rules that are not satisfied by this editor's value is displayed.\r\n     */\r\n    \r\n    get validationMessageMode(): string {\r\n        return this._getOption('validationMessageMode');\r\n    }\r\n    set validationMessageMode(value: string) {\r\n        this._setOption('validationMessageMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The current widget value.\r\n     */\r\n    \r\n    get value(): number {\r\n        return this._getOption('value');\r\n    }\r\n    set value(value: number) {\r\n        this._setOption('value', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    \r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    \r\n    get width(): number|\n        Function|\n        string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number|\n        Function|\n        string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n    /**\r\n     * A handler for the complete event.\r\n     */\r\n     onComplete: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the contentReady event. Executed when the widget's content is ready. This handler may be executed multiple times during the widget's lifetime depending on the number of times its content changes.\r\n     */\r\n     onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the disposing event. Executed when the widget is removed from the DOM using the remove(), empty(), or html() jQuery methods only.\r\n     */\r\n     onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the initialized event. Executed only once, after the widget is initialized.\r\n     */\r\n     onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the optionChanged event. Executed after an option of the widget is changed.\r\n     */\r\n     onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the valueChanged event.\r\n     */\r\n     onValueChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     heightChange: EventEmitter<number|\n        Function|\n        string>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     hoverStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     isValidChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     maxChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     minChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     readOnlyChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     showStatusChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     statusFormatChange: EventEmitter<Function|\n        string>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     validationErrorChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     validationMessageModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     valueChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     widthChange: EventEmitter<number|\n        Function|\n        string>;\r\n\r\n    /**\r\n     * undefined\r\n     */\r\n     onBlur: EventEmitter<any>;\r\n\r\n\r\n     change(_) { }\r\n     touched = () => {};\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            _watcherHelper: WatcherHelper, optionHost: NestedOptionHost) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'complete', emit: 'onComplete' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'maxChange' },\r\n            { emit: 'minChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'showStatusChange' },\r\n            { emit: 'statusFormatChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n        let widget = new DxProgressBar(element, options);\r\n        if (this.validator) {\r\n            this.validator.createInstance(element);\r\n        }\r\n        return widget;\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void): void { this.change = fn; }\r\n    registerOnTouched(fn: () => void): void { this.touched = fn; }\r\n\r\n    _createWidget(element: any) {\r\n        super._createWidget(element);\r\n        this.instance.on('focusOut', (e) => {\r\n            this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n\r\n    ngAfterContentInit() {\r\n        if (this.validator) {\r\n            this.validator.renderOnViewInit = false;\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'dx-progress-bar',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n        NestedOptionHost\r\n    ]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: DxTemplateHost, },\n{type: WatcherHelper, },\n{type: NestedOptionHost, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'validator': [{ type: ContentChild, args: [DxValidatorComponent, ] },],\n'disabled': [{ type: Input },],\n'elementAttr': [{ type: Input },],\n'height': [{ type: Input },],\n'hint': [{ type: Input },],\n'hoverStateEnabled': [{ type: Input },],\n'isValid': [{ type: Input },],\n'max': [{ type: Input },],\n'min': [{ type: Input },],\n'readOnly': [{ type: Input },],\n'rtlEnabled': [{ type: Input },],\n'showStatus': [{ type: Input },],\n'statusFormat': [{ type: Input },],\n'validationError': [{ type: Input },],\n'validationMessageMode': [{ type: Input },],\n'value': [{ type: Input },],\n'visible': [{ type: Input },],\n'width': [{ type: Input },],\n'onComplete': [{ type: Output },],\n'onContentReady': [{ type: Output },],\n'onDisposing': [{ type: Output },],\n'onInitialized': [{ type: Output },],\n'onOptionChanged': [{ type: Output },],\n'onValueChanged': [{ type: Output },],\n'disabledChange': [{ type: Output },],\n'elementAttrChange': [{ type: Output },],\n'heightChange': [{ type: Output },],\n'hintChange': [{ type: Output },],\n'hoverStateEnabledChange': [{ type: Output },],\n'isValidChange': [{ type: Output },],\n'maxChange': [{ type: Output },],\n'minChange': [{ type: Output },],\n'readOnlyChange': [{ type: Output },],\n'rtlEnabledChange': [{ type: Output },],\n'showStatusChange': [{ type: Output },],\n'statusFormatChange': [{ type: Output },],\n'validationErrorChange': [{ type: Output },],\n'validationMessageModeChange': [{ type: Output },],\n'valueChange': [{ type: Output },],\n'visibleChange': [{ type: Output },],\n'widthChange': [{ type: Output },],\n'onBlur': [{ type: Output },],\n'change': [{ type: HostListener, args: ['valueChange', ['$event'], ] },],\n'touched': [{ type: HostListener, args: ['onBlur', ['$event'], ] },],\n};\n}\r\n\r\n\r\nexport class DxProgressBarModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [\r\n    DxTemplateModule\r\n  ],\r\n  declarations: [\r\n    DxProgressBarComponent\r\n  ],\r\n  exports: [\r\n    DxProgressBarComponent,\r\n    DxTemplateModule\r\n  ],\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}