{"version":3,"sources":["resizable.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;;;;;;;;;;;AAYH,sCASuB;AAIvB,qDAAkD;AAGlD,+CAAgD;AAChD,uDAAuD;AACvD,6CAAoD;AACpD,uDAAyD;AACzD,yDAAuD;AAQvD;;GAEG;AAEH;IAA0C,wCAAW;IA0MjD,8BAAY,UAAsB,EAAE,MAAc,EAAE,YAA4B,EACxE,cAA6B,EAAE,UAA4B;QADnE,YAGI,kBAAM,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,cAAc,CAAC,SAoB1D;QAlBG,KAAI,CAAC,oBAAoB,CAAC;YACtB,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,EAAE,aAAa,EAAE;YAC/C,EAAE,SAAS,EAAE,aAAa,EAAE,IAAI,EAAE,eAAe,EAAE;YACnD,EAAE,SAAS,EAAE,eAAe,EAAE,IAAI,EAAE,iBAAiB,EAAE;YACvD,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE;YACzC,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,EAAE,aAAa,EAAE;YAC/C,EAAE,SAAS,EAAE,aAAa,EAAE,IAAI,EAAE,eAAe,EAAE;YACnD,EAAE,IAAI,EAAE,mBAAmB,EAAE;YAC7B,EAAE,IAAI,EAAE,eAAe,EAAE;YACzB,EAAE,IAAI,EAAE,cAAc,EAAE;YACxB,EAAE,IAAI,EAAE,iBAAiB,EAAE;YAC3B,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAC1B,EAAE,IAAI,EAAE,iBAAiB,EAAE;YAC3B,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAC1B,EAAE,IAAI,EAAE,kBAAkB,EAAE;YAC5B,EAAE,IAAI,EAAE,aAAa,EAAE;SAC1B,CAAC,CAAC;QACH,UAAU,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC;;IAC7B,CAAC;IAzND,sBAAI,6CAAW;QAJf;;WAEG;aAEH;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAC1C,CAAC;aACD,UAAgB,KAAU;YACtB,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QAC1C,CAAC;;;OAHA;IAUD,sBAAI,yCAAO;QAJX;;WAEG;aAEH;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACtC,CAAC;aACD,UAAY,KAAa;YACrB,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACtC,CAAC;;;OAHA;IAUD,sBAAI,wCAAM;QAJV;;WAEG;aAEH;YAGI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC;aACD,UAAW,KAED;YACN,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACrC,CAAC;;;OALA;IAYD,sBAAI,2CAAS;QAJb;;WAEG;aAEH;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACxC,CAAC;aACD,UAAc,KAAa;YACvB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACxC,CAAC;;;OAHA;IAUD,sBAAI,0CAAQ;QAJZ;;WAEG;aAEH;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACvC,CAAC;aACD,UAAa,KAAa;YACtB,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC;;;OAHA;IAUD,sBAAI,2CAAS;QAJb;;WAEG;aAEH;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACxC,CAAC;aACD,UAAc,KAAa;YACvB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACxC,CAAC;;;OAHA;IAUD,sBAAI,0CAAQ;QAJZ;;WAEG;aAEH;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACvC,CAAC;aACD,UAAa,KAAa;YACtB,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC;;;OAHA;IAUD,sBAAI,4CAAU;QAJd;;WAEG;aAEH;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACzC,CAAC;aACD,UAAe,KAAc;YACzB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QACzC,CAAC;;;OAHA;IAUD,sBAAI,uCAAK;QAJT;;WAEG;aAEH;YAGI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACpC,CAAC;aACD,UAAU,KAEA;YACN,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACpC,CAAC;;;OALA;IAmHS,8CAAe,GAAzB,UAA0B,OAAO,EAAE,OAAO;QACtC,MAAM,CAAC,IAAI,mBAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC7C,CAAC;IAED,0CAAW,GAAX;QACI,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAGE,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;oBACtB,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,2BAA2B;oBACrC,SAAS,EAAE;wBACP,8BAAc;wBACd,8BAAa;wBACb,gCAAgB;qBACnB;iBACJ,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,mCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAU,GAAG;QACpB,EAAC,IAAI,EAAE,aAAM,GAAG;QAChB,EAAC,IAAI,EAAE,8BAAc,GAAG;QACxB,EAAC,IAAI,EAAE,8BAAa,GAAG;QACvB,EAAC,IAAI,EAAE,gCAAgB,GAAG;KACzB,EAN6F,CAM7F,CAAC;IACK,mCAAc,GAA2C;QAChE,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QACjC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC7B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC5B,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC/B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC9B,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC/B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC9B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAChC,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC3B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QAClC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QACpC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QACtC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QAC/B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QAClC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QACpC,mBAAmB,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QACxC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QACpC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QACnC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QACtC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QACrC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QACtC,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QACrC,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QACvC,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;KACjC,CAAC;IACF,2BAAC;CAzRD,AAyRC,CAzRyC,uBAAW,GAyRpD;AAzRY,oDAAoB;AA4RjC;IAAA;IAiBA,CAAC;IAjBuC,4BAAU,GAA0B;QAC5E,EAAE,IAAI,EAAE,eAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,OAAO,EAAE;wBACP,2BAAgB;qBACjB;oBACD,YAAY,EAAE;wBACZ,oBAAoB;qBACrB;oBACD,OAAO,EAAE;wBACP,oBAAoB;wBACpB,2BAAgB;qBACjB;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,wBAAC;CAjBD,AAiBC,IAAA;AAjBY,8CAAiB","file":"resizable.js","sourceRoot":"","sourcesContent":["/*!\n * devextreme-angular\n * Version: 17.2.4\n * Build date: Wed Dec 13 2017\n *\n * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter\r\n} from '@angular/core';\r\n\r\n\r\n\r\nimport DxResizable from 'devextreme/ui/resizable';\r\n\r\n\r\nimport { DxComponent } from '../core/component';\r\nimport { DxTemplateHost } from '../core/template-host';\r\nimport { DxTemplateModule } from '../core/template';\r\nimport { NestedOptionHost } from '../core/nested-option';\r\nimport { WatcherHelper } from '../core/watcher-helper';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The Resizable widget enables its content to be resizable in the UI.\r\n */\r\n\r\nexport class DxResizableComponent extends DxComponent implements OnDestroy {\r\n    instance: DxResizable;\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    \r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies which borders of the widget element are used as a handle.\r\n     */\r\n    \r\n    get handles(): string {\r\n        return this._getOption('handles');\r\n    }\r\n    set handles(value: string) {\r\n        this._setOption('handles', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    \r\n    get height(): number|\n        Function|\n        string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number|\n        Function|\n        string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the upper height boundary for resizing.\r\n     */\r\n    \r\n    get maxHeight(): number {\r\n        return this._getOption('maxHeight');\r\n    }\r\n    set maxHeight(value: number) {\r\n        this._setOption('maxHeight', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the upper width boundary for resizing.\r\n     */\r\n    \r\n    get maxWidth(): number {\r\n        return this._getOption('maxWidth');\r\n    }\r\n    set maxWidth(value: number) {\r\n        this._setOption('maxWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the lower height boundary for resizing.\r\n     */\r\n    \r\n    get minHeight(): number {\r\n        return this._getOption('minHeight');\r\n    }\r\n    set minHeight(value: number) {\r\n        this._setOption('minHeight', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the lower width boundary for resizing.\r\n     */\r\n    \r\n    get minWidth(): number {\r\n        return this._getOption('minWidth');\r\n    }\r\n    set minWidth(value: number) {\r\n        this._setOption('minWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    \r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    \r\n    get width(): number|\n        Function|\n        string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number|\n        Function|\n        string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n    /**\r\n     * A handler for the disposing event. Executed when the widget is removed from the DOM using the remove(), empty(), or html() jQuery methods only.\r\n     */\r\n     onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the initialized event. Executed only once, after the widget is initialized.\r\n     */\r\n     onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the optionChanged event. Executed after an option of the widget is changed.\r\n     */\r\n     onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the resize event.\r\n     */\r\n     onResize: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the resizeEnd event.\r\n     */\r\n     onResizeEnd: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the resizeStart event.\r\n     */\r\n     onResizeStart: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     handlesChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     heightChange: EventEmitter<number|\n        Function|\n        string>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     maxHeightChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     maxWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     minHeightChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     minWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the ${optionName}Change event.\r\n     */\r\n     widthChange: EventEmitter<number|\n        Function|\n        string>;\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            _watcherHelper: WatcherHelper, optionHost: NestedOptionHost) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'resize', emit: 'onResize' },\r\n            { subscribe: 'resizeEnd', emit: 'onResizeEnd' },\r\n            { subscribe: 'resizeStart', emit: 'onResizeStart' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'handlesChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'maxHeightChange' },\r\n            { emit: 'maxWidthChange' },\r\n            { emit: 'minHeightChange' },\r\n            { emit: 'minWidthChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n        return new DxResizable(element, options);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'dx-resizable',\r\n    template: '<ng-content></ng-content>',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost\r\n    ]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: DxTemplateHost, },\n{type: WatcherHelper, },\n{type: NestedOptionHost, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'elementAttr': [{ type: Input },],\n'handles': [{ type: Input },],\n'height': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'maxWidth': [{ type: Input },],\n'minHeight': [{ type: Input },],\n'minWidth': [{ type: Input },],\n'rtlEnabled': [{ type: Input },],\n'width': [{ type: Input },],\n'onDisposing': [{ type: Output },],\n'onInitialized': [{ type: Output },],\n'onOptionChanged': [{ type: Output },],\n'onResize': [{ type: Output },],\n'onResizeEnd': [{ type: Output },],\n'onResizeStart': [{ type: Output },],\n'elementAttrChange': [{ type: Output },],\n'handlesChange': [{ type: Output },],\n'heightChange': [{ type: Output },],\n'maxHeightChange': [{ type: Output },],\n'maxWidthChange': [{ type: Output },],\n'minHeightChange': [{ type: Output },],\n'minWidthChange': [{ type: Output },],\n'rtlEnabledChange': [{ type: Output },],\n'widthChange': [{ type: Output },],\n};\n}\r\n\r\n\r\nexport class DxResizableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [\r\n    DxTemplateModule\r\n  ],\r\n  declarations: [\r\n    DxResizableComponent\r\n  ],\r\n  exports: [\r\n    DxResizableComponent,\r\n    DxTemplateModule\r\n  ],\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}