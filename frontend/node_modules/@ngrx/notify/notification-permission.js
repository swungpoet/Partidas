"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = require('rxjs/Observable');
var NotificationPermission = (function (_super) {
    __extends(NotificationPermission, _super);
    function NotificationPermission(notification) {
        _super.call(this, function (subscriber) {
            if (!notification || notification.permission === 'denied') {
                subscriber.next(false);
                subscriber.complete();
            }
            else if (notification.permission === 'granted') {
                subscriber.next(true);
                subscriber.complete();
            }
            else {
                notification.requestPermission().then(function (permission) {
                    subscriber.next(permission === 'granted');
                    subscriber.complete();
                });
            }
        });
    }
    return NotificationPermission;
}(Observable_1.Observable));
exports.NotificationPermission = NotificationPermission;
