{
  "_args": [
    [
      {
        "raw": "ng2-stateful-button",
        "scope": null,
        "escapedName": "ng2-stateful-button",
        "name": "ng2-stateful-button",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/edwin/Documents/CodeKit/partidas/frontend"
    ]
  ],
  "_from": "ng2-stateful-button@latest",
  "_id": "ng2-stateful-button@0.0.9",
  "_inCache": true,
  "_location": "/ng2-stateful-button",
  "_nodeVersion": "5.12.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/ng2-stateful-button-0.0.9.tgz_1480618438414_0.6581856645643711"
  },
  "_npmUser": {
    "name": "interfacewerk",
    "email": "npmjs@interfacewerk.de"
  },
  "_npmVersion": "3.8.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ng2-stateful-button",
    "scope": null,
    "escapedName": "ng2-stateful-button",
    "name": "ng2-stateful-button",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ng2-stateful-button/-/ng2-stateful-button-0.0.9.tgz",
  "_shasum": "51a61f5270be730b16edc26bff0bd0712024da04",
  "_shrinkwrap": null,
  "_spec": "ng2-stateful-button",
  "_where": "/Users/edwin/Documents/CodeKit/partidas/frontend",
  "author": {
    "name": "interfacewerk GmbH, Kevin Merckx, Moritz C. Türck"
  },
  "bugs": {
    "url": "https://github.com/interfacewerk/ng2-stateful-button/issues"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {},
  "description": "An implementation of stateful buttons for angular2+ including loading, progress,success and failure state.",
  "devDependencies": {
    "@angular/common": "~2.1.0",
    "@angular/compiler": "~2.1.0",
    "@angular/core": "~2.1.0",
    "@angular/forms": "~2.1.0",
    "@angular/http": "~2.1.0",
    "@angular/platform-browser": "~2.1.0",
    "@angular/platform-browser-dynamic": "~2.1.0",
    "@angular/router": "~3.1.0",
    "@types/jasmine": "^2.2.30",
    "@types/node": "^6.0.42",
    "angular-cli": "1.0.0-beta.19-3",
    "codelyzer": "1.0.0-beta.1",
    "commitizen": "2.8.6",
    "core-js": "^2.4.1",
    "cz-conventional-changelog": "1.2.0",
    "jasmine-core": "2.4.1",
    "jasmine-spec-reporter": "2.5.0",
    "karma": "1.2.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-cli": "^1.0.1",
    "karma-jasmine": "^1.0.2",
    "karma-remap-istanbul": "^0.2.1",
    "protractor": "4.0.9",
    "rxjs": "5.0.0-beta.12",
    "semantic-release": "4.3.5",
    "ts-helpers": "^1.1.1",
    "ts-node": "1.2.1",
    "tslint": "3.13.0",
    "typescript": "~2.0.3",
    "webdriver-manager": "10.2.5",
    "webpack": "2.1.0-beta.25",
    "zone.js": "^0.6.23"
  },
  "directories": {},
  "dist": {
    "shasum": "51a61f5270be730b16edc26bff0bd0712024da04",
    "tarball": "https://registry.npmjs.org/ng2-stateful-button/-/ng2-stateful-button-0.0.9.tgz"
  },
  "gitHead": "a6e016cb6749f7b5d8d8909862d906eb202fbc47",
  "homepage": "https://github.com/interfacewerk/ng2-stateful-button#readme",
  "keywords": [
    "angular",
    "angular2",
    "ng2",
    "ui",
    "ui-pattern",
    "button",
    "stateful"
  ],
  "license": "MIT",
  "main": "bundles/ng2-stateful-button.umd.js",
  "maintainers": [
    {
      "name": "interfacewerk",
      "email": "npmjs@interfacewerk.de"
    }
  ],
  "module": "bundles/index.js",
  "name": "ng2-stateful-button",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": "^2.0.0"
  },
  "readme": "# Angular2 Stateful Button\n\n[ ![Codeship Status for interfacewerk/ng2-stateful-button](https://codeship.com/projects/d2335380-912b-0134-8559-6ae3641f140d/status?branch=master)](https://codeship.com/projects/185845)\n\n## Demo\n\nAn implementation of stateful buttons for angular2+ including loading, progress,success and failure state.\n\n\n## Installation\n\n```\nyarn add ng2-stateful-button \n```\n\nor\n\n```\nnpm install ng2-stateful-button --save\n```\n\n\n## Setup\n\n```TypeScript\n// app.module.ts\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {StatefulButtonModule} from 'ng2-stateful-button'; // <-- import the module\nimport {MyComponent} from './my.component';\n\n@NgModule({\n    imports: [BrowserModule, StatefulButtonModule], // <-- include it in your app module\n    declarations: [MyComponent],\n    bootstrap: [MyComponent]\n})\nexport class MyAppModule {}\n```\n\n## Usage\n\n### Behaviour\n\nng2-stateful-button provides one component `stateful-button` that you can use to wrap a button:\n\n```\n<stateful-button [buttonState]=\"myButtonState\">\n  <button (click)=\"do()\">\n    <sb-label-idle>Save</sb-label-idle>\n    <sb-label-doing>Saving</sb-label-doing>\n    <sb-label-success>Saved</sb-label-success>\n    <sb-label-failure>Save failed!</sb-label-failure>\n  </button>\n</stateful-button>\n```\n\nThe `stateful-button` component takes one input `buttonState`, which is the state of your button.\n\nYou can still set the attributes (disabled, click, type etc.) you want, just like you would do with a normal button. We use the standard `ng-content` to project the content and provide basic functionnality of state handling and a nice state declaration.\n\nThere are four states which are defined in an `enum ButtonState`. Your component controls the state of the button.\n\n```\nimport { ButtonState } from 'ng2-stateful-button';\n\n@Component(…)\nexport class MyComponent {\n  …\n  myButtonState: ButtonState = ButtonState.IDLE;\n  …\n\n  do() {\n    this.myButtonState = ButtonState.DOING;\n    // http requests, timeout, etc.\n    this.myButtonState = ButtonState.SUCCESS;\n  }\n}\n```\n\nUse the `sb-label-idle/doing/failure/success` components to define what will be shown for each state of the button. That's it!\n\n**IMPORTANT**: put the `sb-label-XY` into the `<button>`.\n\n### Style\n\nng2-stateful-button comes with inline component styles. They are completely customizable. Each state (IDLE, DOING, SUCCESS, FAILURE) is represented\nas a CSS class on the `stateful-button` element. No magic here. You can customize the `sb-label-XY` as well. For your information, the generated HTML looks like:\n\n```\n<stateful-button class=\"stateful-button stateful-button--doing\">\n  <button>\n    <sb-label-idle>Save</sb-label-idle>\n    <sb-label-doing>Saving</sb-label-doing>\n    <sb-label-success>Saved</sb-label-success>\n    <sb-label-failure>Save failed!</sb-label-failure>\n  </button>\n</stateful-button>\n```\n\nAs an exemple, you could do the following (in SASS/LESS):\n\n```\nstateful-button {\n  &.stateful-button--doing button {\n    background-color: grey;\n    color: white;\n    box-shadow: none;\n    cursor: wait;\n  }\n\n  &.stateful-button--success button {\n    background-color: #2ECC40;\n    color: white;\n    box-shadow: none;\n    cursor: default;\n  }\n\n  &.stateful-button--failure button {\n    background-color: #FF4136;\n    color: white;\n    box-shadow: none;\n    cursor: default;\n  }\n}\n```\n\nThe default CSS properties of `sb-label-XY` are:\n\n```\nheight: 30px;\nline-height: 30px;\nmargin-top: -30px;\ntext-align: center;\ndisplay: block;\n```\n\nand the `sb-label-idle` has a special:\n\n```\nmargin-top: 0;\n```\n\nThis CSS magic makes sure that the button takes the maximum width of all the states! `sb-label-XY`s are hidden with `opacity: 0`.\n\n## Develop\n\nLink your development folder of ng2-stateful-button:\n\n```\nyarn link\n```\n\nand then go to a project you want to use the stateful buttons in and do\n\n```\nyarn link \"ng2-stateful-button\"\n```\n\nto use it there.\n\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git+https://github.com/interfacewerk/ng2-stateful-button.git",
    "type": "git"
  },
  "scripts": {
    "build": "webpack && cp bundles/ng2-stateful-button.umd.js bundles/index.js",
    "commit": "npm run prepublish && git-cz",
    "e2e": "protractor",
    "lint": "tslint \"src/**/*.ts\"",
    "pree2e": "webdriver-manager update",
    "prepublish": "tsc && npm run build",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "start": "ng serve",
    "test": "ng test"
  },
  "typings": "bundles/index.d.ts",
  "version": "0.0.9"
}
